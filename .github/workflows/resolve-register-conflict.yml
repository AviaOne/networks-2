name: Auto resolve register validator conflicts

on:
  push:
    branches: [main]

  workflow_dispatch:

concurrency:
  group: resolve-conflict
  cancel-in-progress: true

jobs:
  resolve-next-pr-conflicts:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: prepare branch list
        id: next-pr
        run: |
          set -eo pipefail
          LABEL_PREFIX="chain: ⛓️"
          PR_LIST=$(gh pr list --json headRefName,labels --search "org:okp4 repo:okp4/networks state:open label:register-validator author:bot-anik sort:created-asc")
          NUM_OF_PR=$(echo $PR_LIST | jq '. | length')
          if [[ $NUM_OF_PR = 0 ]]; then
            echo No PR waiting
            exit
          fi
          OLDEST_PR=$(echo $PR_LIST | jq '.[0]')
          CHAIN_LABEL=$(echo $OLDEST_PR | jq .labels | jq -r ".[] | select(.name | startswith(\"${LABEL_PREFIX}\"))" | jq .name)
          CHAIN_ID=$(echo ${CHAIN_LABEL/${LABEL_PREFIX}/} | tr -d ' ')
          if [ -z "$CHAIN_ID" ]; then
            echo "No chain id on label"
            exit
          fi

          echo "chain-id=${CHAIN_ID}" >> $GITHUB_OUTPUT
          echo "headRefName=$(echo $OLDEST_PR | jq .headRefName )" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.OKP4_TOKEN }}

      - name: Get network register config
        id: register-config
        run: |
          set -eo pipefail
          config=$(cat chains/${{ steps.next-pr.outputs.chain-id }}/register-config.json | jq -c '.')
          echo "config=${config}" >> $GITHUB_OUTPUT

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.OKP4_BOT_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.OKP4_BOT_GPG_PASSPHRASE }}
          git_config_global: true
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: rebase and resolve genesis conflicts
        id: resolve-conflict
        run: |
          set -eo pipefail
          CHAIN_ID=${{ steps.next-pr.outputs.chain-id }}
          BRANCH=${{ steps.next-pr.outputs.headRefName }}
          ISSUE_NUM=$(echo "$BRANCH" | sed 's/feat\///' | cut -c1-3)

          git switch $BRANCH

          MERGE_BASE=$(git merge-base $BRANCH main)
          git merge-tree $MERGE_BASE $BRANCH main | xargs |
          if grep -oe '<<<<<<<.*=======.*>>>>>>>';then
              echo "conflict-exists=true" >> $GITHUB_OUTPUT
          else
            echo No merge conflicts
            echo "conflict-exists=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          git config user.name "$GIT_USER_NAME"
          git config user.email "$GIT_USER_MAIL"

          git rebase -X ours main

          git show main:chains/$CHAIN_ID/genesis.json > ./chains/$CHAIN_ID/genesis.json

          GENTX=$(cat chains/$CHAIN_ID/gentx/gentx-$ISSUE_NUM.json)
          OKP4D_VERSION=$(cat ./chains/$CHAIN_ID/version.txt)

          mkdir -p $NODE_HOME
          docker run --rm -v $NODE_HOME:$NODE_HOME okp4/okp4d:$OKP4D_VERSION init --home $NODE_HOME whatever
          sudo cp chains/$CHAIN_ID/genesis.json $NODE_HOME/config/genesis.json

          delegator_addr=$(echo "$GENTX" | jq -r '.body.messages[0].delegator_address')
          delegator_balance="`expr ${{ fromJson(steps.register-config.outputs.config).delegation.amount }} + 200000`${{ fromJson(steps.register-config.outputs.config).delegation.denom }}"
          docker run --rm -v $NODE_HOME:$NODE_HOME okp4/okp4d:$OKP4D_VERSION add-genesis-account --home $NODE_HOME $delegator_addr $delegator_balance

          docker run --rm -v $NODE_HOME:$NODE_HOME -v $PWD/chains/$CHAIN_ID/gentx:/gentx okp4/okp4d:$OKP4D_VERSION collect-gentxs --home $NODE_HOME --gentx-dir /gentx
          cp $NODE_HOME/config/genesis.json chains/$CHAIN_ID/genesis.json
        env:
          NODE_HOME: /tmp/node
          BRANCH: ${{ steps.next-pr.outputs.headRefName }}
          GIT_USER_NAME: ${{ secrets.OKP4_BOT_GIT_AUTHOR_NAME }}
          GIT_USER_MAIL: ${{ secrets.OKP4_BOT_GIT_AUTHOR_EMAIL }}

      - name: Get last commit message
        if: steps.resolve-conflict.outputs.conflict-exists == 'true'
        id: last-commit-message
        run: |
          echo "msg=$(git log -1 --pretty=%s)" >> $GITHUB_OUTPUT

      - name: amend commit and force push
        if: steps.resolve-conflict.outputs.conflict-exists == 'true'
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: ${{ steps.last-commit-message.outputs.msg }}
          commit_options: "--amend --no-edit"
          push_options: "--force"
          file_pattern: "chains/*/genesis.json"
          skip_fetch: true
